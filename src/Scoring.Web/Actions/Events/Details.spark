<viewdata model="Scoring.Web.Actions.Events.EventDetailsViewModel"/>
<br/>
<br/>

<div class="row">
    <h2>${this.DisplayFor(m => m.Event.Name)} - ${this.DisplayFor(m => m.Event.Start)}</h2>
  <br/>
  <h3>${this.DisplayFor(m => m.Event.Description)}</h3>
  <br/>

</div>

<div class="row">
  <div class="span2">
    <p></p>
  </div>
    <div class="span5">
  <table>
    <thead>
      <tr>
        <th>Place</th>
        <th></th>
        <th>Team</th>
        <th>Score</th>
      </tr>
    </thead>
    <tr each="var s in Model.Scores.OrderBy(score => score.Place).ThenBy(score => score.Athlete.Name).Take(6)">
      <td>${s.Place}</td>
      <td>
        ${this.ImageFor(s.Athlete.Image).Attr("height", 50).Attr("width", 50)}
      </td>
      <td>${this.LinkTo(new AthleteDetailsRequest{AthleteId = s.Athlete.Id}).Text(s.Athlete.Name).AddClass("whitelink")}</td>
      <td>
        <test if="Model.Event.ScoreType == ScoreType.Time">${this.DisplayFor(s, sc => sc.Time)}</test>
        <test if="Model.Event.ScoreType == ScoreType.Reps">${s.Reps}</test>
        <test if="Model.Event.ScoreType == ScoreType.Weight">${s.Weight}</test>
        <test if="Model.Event.ScoreType == ScoreType.Place">${s.ScoredPlace}</test>
      </td>
      <td>${this.LinkTo(new LogScoreRequest{AthleteId = s.Athlete.Id, EventId = Model.Event.Id}).Text("Log Score")}</td>
      
    </tr>
  </table>
  </div>
  <div class="span5">
    <table>
      <thead>
        <tr>
          <th>Place</th>
          <th></th>
          <th>Team</th>
          <th>Score</th>
        </tr>
      </thead>
      <tr each="var s in Model.Scores.OrderBy(score => score.Place).ThenBy(score => score.Athlete.Name).Skip(6)">
        <td>${s.Place}</td>
        <td>
          ${this.ImageFor(s.Athlete.Image).Attr("height", 50).Attr("width", 50)}
        </td>
        <td>${this.LinkTo(new AthleteDetailsRequest{AthleteId = s.Athlete.Id}).Text(s.Athlete.Name).AddClass("whitelink")}</td>
        <td>
          <test if="Model.Event.ScoreType == ScoreType.Time">${this.DisplayFor(s, sc => sc.Time)}</test>
          <test if="Model.Event.ScoreType == ScoreType.Reps">${s.Reps}</test>
          <test if="Model.Event.ScoreType == ScoreType.Weight">${s.Weight}</test>
          <test if="Model.Event.ScoreType == ScoreType.Place">${s.ScoredPlace}</test>
        </td>
        <td>${this.LinkTo(new LogScoreRequest{AthleteId = s.Athlete.Id, EventId = Model.Event.Id}).Text("Log Score")}</td>

      </tr>
    </table>
  </div>
</div>